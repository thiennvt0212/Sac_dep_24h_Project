generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type Item {
  name       String
  description String
  price      String
}

type Skills {
  name       String
  index      String
}

type OrderDetail {
  productId String
  productName String
  quantity   Int
  price      Float
}

type CartItem {
  productId   String
  productName String
  quantity    Int
  price       Float
}



// Các enum
enum PaymentMethod {
  VNPay
  CASH
}
model CategoryProduct{
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
} 
model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  price       Float
  image       String?  // URL ảnh
  sku         String
  category    String   @db.ObjectId
  quantity    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  username  String   @unique
  password  String
  fullName  String
  address   String?
  phone     String?
  country   String?
  companyName String?
  role      String   @default("user")

  Comment Comment[]
}

model expert {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  exp         Int
  rank       String
  phoneNumber String
  email       String   @unique
  image       String  // URL ảnh
  skills      Json
}

model AppointmentSchedule {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String    @db.ObjectId
  date        DateTime
  time        String
  status      String   @default("pending") 
}


model Service {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  des        Item[]
}

model ServiceRelax {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  image      String  // URL ảnh
  category   String
}

model CategoryBlog{
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  description String?
}

model Blog{
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  categoryBlogId  String   @db.ObjectId
  title       String
  content     String
  createdAt  DateTime @default(now())
  image       String  // URL ảnh
}

model news{
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description     String
  createdAt  DateTime @default(now())
  image       String  // URL ảnh
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  blogId     String   @db.ObjectId
  userId     String   @db.ObjectId
  content    String
  createdAt  DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
}

model Order {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  createdAt   DateTime @default(now())
  status      String   @default("pending") // Trạng thái đơn hàng
  totalAmount Float
  orderDetails OrderDetail[]
  paymentMethod PaymentMethod
  shippingAddress String
  phoneNumber String
}

model Cart {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  items     CartItem[]  // List of product trong giỏ hàng
  updatedAt DateTime    @updatedAt
}
